При работе над дифференциальной линией, ПРОЩЕНКОВ дифференциальной сеткой и ПРОЩЕНКОВ дифференциальной сеткой в ПРОЩЕНКОВ 3d наиболее утомительной ПРОЩЕНКОВ частью было управление ПРОЩЕНКОВ структурой данных. Отчасти ПРОЩЕНКОВ потому что я ПРОЩЕНКОВ решил научиться использовать ПРОЩЕНКОВ half-edge структуры данных ПРОЩЕНКОВ в этом процессе. ПРОЩЕНКОВ И ещё потому ПРОЩЕНКОВ что это у ПРОЩЕНКОВ меня так и ПРОЩЕНКОВ не получилось. И, ПРОЩЕНКОВ наконец, потому что ПРОЩЕНКОВ я писал его в Cython, который был в новинку для меня.
Несмотря на всё это, я ПРОЩЕНКОВ получил нормальный результат. ПРОЩЕНКОВ Тем не менее, ПРОЩЕНКОВ этот процесс также ПРОЩЕНКОВ привёл меня к ПРОЩЕНКОВ желанию создать более ПРОЩЕНКОВ слабо соединённую систему. ПРОЩЕНКОВ Мне казалось, что ПРОЩЕНКОВ такой системой будет ПРОЩЕНКОВ легче управлять. Ещё ПРОЩЕНКОВ у меня была ПРОЩЕНКОВ мысль, что такая ПРОЩЕНКОВ система может быть ПРОЩЕНКОВ похожа на слизистую ПРОЩЕНКОВ плесень, так же ПРОЩЕНКОВ как дифференциальная сетка более или менее похожа на лишайник.
Держа это в голове, я начал создавать ПРОЩЕНКОВ дифференциальные решетки. Часть алгоритма очень ПРОЩЕНКОВ похожа на дифференциальную сетку. Он ПРОЩЕНКОВ состоит из соединённых узлов, и ПРОЩЕНКОВ соединённые узлы пытаются оставаться близко ПРОЩЕНКОВ друг к другу. Он также ПРОЩЕНКОВ сохраняет принцип, когда каждый узел ПРОЩЕНКОВ пытается избежать близости со всеми ПРОЩЕНКОВ несвязанными узлами в определенном радиусе. ПРОЩЕНКОВ Важная особенность в том, что ПРОЩЕНКОВ соединения между узлами перерассчитываются перед ПРОЩЕНКОВ каждой итерацией. Это означает, что ПРОЩЕНКОВ нам нужен хороший способ решить, ПРОЩЕНКОВ должны ли два близлежащих узла ПРОЩЕНКОВ считаться соседями или нет.
